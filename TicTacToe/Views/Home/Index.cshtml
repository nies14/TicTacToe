<!DOCTYPE html>
<html>
<head>
    <title>Tic Tac Toe</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <!-- Bootstrap CSS CDN -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Custom styles specific to your game */
        #game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px); /* Adjusted for Bootstrap grid */
            grid-template-rows: repeat(3, 100px); /* Adjusted for Bootstrap grid */
            gap: 5px;
            justify-content: center;
        }

        .cell {
            width: 100px; /* Adjusted for Bootstrap grid */
            height: 100px; /* Adjusted for Bootstrap grid */
            line-height: 100px; /* Adjusted for Bootstrap grid */
            text-align: center;
            font-size: 36px;
            border: 1px solid black;
            cursor: pointer;
        }

        .modal-content {
            text-align: center;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container">
        <h1 class="text-center my-4">Tic Tac Toe</h1>

        <div id="game-board" class="mb-4"></div>

        <div class="text-center mb-4">
            <button class="btn btn-primary" onclick="resetGame()">Reset Game</button>
        </div>

        <!-- Modal -->
        <div id="winnerModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Game Over!</h5>
                        <button type="button" class="close" onclick="closeModal()" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p id="resultMessage"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="playAgain()">Play Again</button>
                        <button type="button" class="btn btn-secondary" onclick="exitGame()">Exit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/gamehub")
            .build();

        let currentPlayer = "X";
        let movesCount = 0;

        connection.on("ReceiveMove", (player, row, col) => {
            const cell = document.getElementById(`cell-${row}-${col}`);
            cell.innerText = player;
            cell.style.pointerEvents = "none"; // Disable further clicks on this cell
            movesCount++;
            checkGameStatus();
        });

        connection.on("ReceiveWinner", (player) => {
            showResultModal(`${player} wins!`);
        });

        connection.on("ReceiveDraw", () => {
            showResultModal("It's a draw!");
        });

        connection.on("ReceiveReset", () => {
            resetBoard();
        });

        connection.start().catch(err => console.error(err.toString()));

        function makeMove(row, col) {
            const cell = document.getElementById(`cell-${row}-${col}`);
            if (cell.innerText === "") {
                connection.invoke("SendMove", currentPlayer, row, col).catch(err => console.error(err.toString()));
                currentPlayer = currentPlayer === "X" ? "O" : "X";
            }
        }

        function resetGame() {
            connection.invoke("SendReset").catch(err => console.error(err.toString()));
        }

        function resetBoard() {
            for (let i = 0; i < 3; i++) {
                for (let j = 0; j < 3; j++) {
                    const cell = document.getElementById(`cell-${i}-${j}`);
                    cell.innerText = "";
                    cell.style.pointerEvents = "auto"; // Re-enable clicks
                }
            }
            movesCount = 0; // Reset moves count
            currentPlayer = "X"; // Reset to X after game reset
            closeModal();
        }

        function showResultModal(message) {
            const modal = document.getElementById("winnerModal");
            const resultMessage = document.getElementById("resultMessage");
            resultMessage.innerText = message;
            $(modal).modal('show'); // Show Bootstrap modal
        }

        function closeModal() {
            const modal = document.getElementById("winnerModal");
            $(modal).modal('hide'); // Hide Bootstrap modal
        }

        function playAgain() {
            resetGame();
        }

        function exitGame() {
            // Close the window/tab
            window.close();
        }

        function checkGameStatus() {
            // Check if all cells are filled and no winner
            if (movesCount === 9) {
                showResultModal("It's a draw!");
            }
        }

        // Create the game board
        const gameBoard = document.getElementById("game-board");
        for (let i = 0; i < 3; i++) {
            for (let j = 0; j < 3; j++) {
                const cell = document.createElement("div");
                cell.id = `cell-${i}-${j}`;
                cell.className = "cell";
                cell.addEventListener("click", () => makeMove(i, j));
                gameBoard.appendChild(cell);
            }
        }
    </script>
</body>
</html>
